# This file contains common pin mappings for the BIGTREETECH EBBCan
# Canbus board. To use this config, the firmware should be compiled for the
# STM32G0B1 with "8 MHz crystal" and "USB (on PA11/PA12)" or "CAN bus (on PB0/PB1)".
# The "EBB Can" micro-controller will be used to control the components on the nozzle.

# See docs/Config_Reference.md for a description of parameters.


### ------ MAKE MENUCONFIG ------ ###
#[ ] Enable extra low-level configuration options
#    Micro-controller Architecture (STMicroelectronics STM32)  --->
#    Processor model (STM32G0B1)  --->
#    Bootloader offset (8KiB bootloader)  --->
#    Clock Reference (8 MHz crystal)  --->
#    Communication interface (CAN bus (on PB0/PB1))  --->

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00
canbus_uuid: b68a073452c1 # Replace with your UUID

[temperature_sensor ebb_chamber]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2

[temperature_sensor ebb_mcu_temp]
sensor_type: temperature_mcu
sensor_mcu: EBBCan
min_temp: 0
max_temp: 100

#[adxl345]
#cs_pin: EBBCan: PB12
#spi_software_sclk_pin: EBBCan: PB10
#spi_software_mosi_pin: EBBCan: PB11
#spi_software_miso_pin: EBBCan: PB2
#axes_map: z,-y,x

#[resonance_tester]
#accel_chip: adxl345
#probe_points: 150,150,40

[extruder]
step_pin: EBBCan: PD0
dir_pin: !EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 32
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: EBBCan: PB13
sensor_type: EPCOS 100K B57560G104F
sensor_pin: EBBCan: PA3
control: pid
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 270
# If you use PT1000, use these parameters instead
# sensor_type:MAX31865
# sensor_pin: EBBCan: PA4
# spi_bus: spi1
# rtd_nominal_r: 100
# rtd_reference_r: 430
# rtd_num_of_wires: 2

[tmc2209 extruder]
uart_pin: EBBCan: PA15
interpolate: False
run_current: 0.5
stealthchop_threshold: 0

[fan]
pin: EBBCan: PA1
max_power: 1.0
kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hotend_fan]
pin: EBBCan: PA0
heater: extruder
kick_start_time: 0.5
heater_temp: 50.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

#[heater_fan 4W_FAN0]
#pin: EBBCan: PB14
#tachometer_pin: EBBCan: PB15
#tachometer_ppr: 1

#[neopixel sb_leds]
#pin: EBBCan:PD3
#   The pin connected to the neopixel. This parameter must be
#   provided.
#chain_count: 10 # For PCB Logo
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
#color_order: GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRB, GRBW, GRBW # For PCB Logo
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0
#initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.#

#[bltouch]
#sensor_pin: ^EBBCan: PB8
#control_pin: EBBCan: PB9

## NPN and PNP proximity switch types can be set by jumper
#[probe]
#pin: ^EBBCan: PC13

#[output_pin PB5]
#pin: EBBCan: PB5

#[output_pin PB7]
#pin: EBBCan: PB7

#[output_pin PB6]
#pin: EBBCan: PB6
